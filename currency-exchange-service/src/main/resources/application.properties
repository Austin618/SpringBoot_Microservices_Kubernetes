#spring.config.import=optional:configserver:http://localhost:8888
spring.application.name=currency-exchange
server.port=8000

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

resilience4j.retry.instances.sample-api.max-attempts=5
resilience4j.retry.instances.sample-api.wait-duration=1s
# Each subsequent Retry is taking longer and longer
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true

# Details: https://resilience4j.readme.io/docs/circuitbreaker
# closed state
# open state
# half_open state
# failure rate threshold: Only if 90% of the request fail, then switch to open state.
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=90

# limit refresh: 2 requests in 10s
resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s

resilience4j.bulkhead.instances.default.max-concurrent-calls=10

#spring.sleuth.sampler.probability=1.0 #SB2
# 1.0: Trace every request
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Kubernetes
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true


# Build image:
# 1. cd into each single microservice
# 2. Run "mvn spring-boot:build-image -DskipTests"